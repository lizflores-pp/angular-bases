{"ast":null,"code":"import { v4 as uuid } from \"uuid\";\nimport * as i0 from \"@angular/core\";\nexport class DbzService {\n  constructor() {\n    this.characters = [{\n      id: uuid(),\n      name: 'Krillin',\n      power: 1000\n    }, {\n      id: uuid(),\n      name: 'Goku',\n      power: 9500\n    }, {\n      id: uuid(),\n      name: 'Vegeta',\n      power: 10000\n    }];\n  }\n  addCharacter(character) {\n    const newCharacter = {\n      id: uuid(),\n      ...character\n    };\n    this.characters.push(newCharacter);\n  }\n  onDeleteCharacterById(idCharacter) {\n    this.characters.filter(c => c.id !== idCharacter);\n    // this.characters.splice(idCharacter, 1);\n  }\n\n  static {\n    this.ɵfac = function DbzService_Factory(t) {\n      return new (t || DbzService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: DbzService,\n      factory: DbzService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["v4","uuid","DbzService","constructor","characters","id","name","power","addCharacter","character","newCharacter","push","onDeleteCharacterById","idCharacter","filter","c","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Lizeth Flores\\Documents\\cursos\\Angular\\02-bases\\src\\app\\dbz\\services\\dbz.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { Character } from '../interfaces/character.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DbzService {\r\n  public characters: Character[] = [\r\n    {\r\n      id: uuid(),\r\n      name: 'Krillin',\r\n      power: 1000\r\n    },\r\n    {\r\n      id: uuid(),\r\n      name: 'Goku',\r\n      power: 9500\r\n    },\r\n    {\r\n      id: uuid(),\r\n      name: 'Vegeta',\r\n      power: 10000\r\n    }\r\n  ];\r\n\r\n  addCharacter(character: Character):void {\r\n    const newCharacter: Character = {\r\n      id: uuid(),\r\n      ...character\r\n    }\r\n    this.characters.push(newCharacter);\r\n  }\r\n\r\n  onDeleteCharacterById(idCharacter: string):void{\r\n    this.characters.filter((c) => c.id !== idCharacter);\r\n    // this.characters.splice(idCharacter, 1);\r\n  }\r\n}\r\n"],"mappings":"AACA,SAASA,EAAE,IAAIC,IAAI,QAAQ,MAAM;;AAMjC,OAAM,MAAOC,UAAU;EAHvBC,YAAA;IAIS,KAAAC,UAAU,GAAgB,CAC/B;MACEC,EAAE,EAAEJ,IAAI,EAAE;MACVK,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE;KACR,EACD;MACEF,EAAE,EAAEJ,IAAI,EAAE;MACVK,IAAI,EAAE,MAAM;MACZC,KAAK,EAAE;KACR,EACD;MACEF,EAAE,EAAEJ,IAAI,EAAE;MACVK,IAAI,EAAE,QAAQ;MACdC,KAAK,EAAE;KACR,CACF;;EAEDC,YAAYA,CAACC,SAAoB;IAC/B,MAAMC,YAAY,GAAc;MAC9BL,EAAE,EAAEJ,IAAI,EAAE;MACV,GAAGQ;KACJ;IACD,IAAI,CAACL,UAAU,CAACO,IAAI,CAACD,YAAY,CAAC;EACpC;EAEAE,qBAAqBA,CAACC,WAAmB;IACvC,IAAI,CAACT,UAAU,CAACU,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACV,EAAE,KAAKQ,WAAW,CAAC;IACnD;EACF;;;;uBA9BWX,UAAU;IAAA;EAAA;;;aAAVA,UAAU;MAAAc,OAAA,EAAVd,UAAU,CAAAe,IAAA;MAAAC,UAAA,EAFT;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}